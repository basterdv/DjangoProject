"""
Django settings for DjangoProject project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

from django.conf.urls.static import static
from django.template.context_processors import media

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-rq&+8@6!b^m_8p(16iu^8o8#jnprr0i7v4ux_%u-qi36$+mu@)"
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY','rq&+8@6!b^m_8p(16iu^8o8#jnprr0i7v4ux_%u-qi36$+mu@')

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = bool(
    os.environ.get('DJANGO_DEBUG',True)
)

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 'exchange_things.apps.ExchangeThingsConfig',
    # 'exchange_things',
    'fontawesomefree',
    "debug_toolbar",
    'crispy_forms',
    'social_django',

    'main',
    'goods',
    'users',
    'orders',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",

    "debug_toolbar.middleware.DebugToolbarMiddleware",
]

ROOT_URLCONF = "DjangoProject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates']
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                'social_django.context_processors.backends',
                'django.template.context_processors.debug',
            ],
        },
    },
]

WSGI_APPLICATION = "DjangoProject.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}
# SOCIAL_AUTH_VK_OAUTH2_KEY = 'ea9651f2ea9651f2ea9651f232e9ae78b2eea96ea9651f282053dd392b55a74f6d0d517'
# SOCIAL_AUTH_VK_OAUTH2_SECRET = 'Y5HW8tHPpImF7oi8sKd9'
SOCIAL_AUTH_VK_OAUTH2_KEY = '54015625' #'ID приложения'
SOCIAL_AUTH_VK_OAUTH2_SECRET = 'xVWmzYNCFEr1ZyUPOxpi' #'Защищённый ключ'
SOCIAL_AUTH_VK_OAUTH2_SCOPE = ['email']  # Пример: запрашиваем доступ к email
SOCIAL_AUTH_URL_NAMESPACE = 'users:social'
SOCIAL_AUTH_REQUIRE_POST = True

AUTHENTICATION_BACKENDS = (
    'social_core.backends.vk.VKOAuth2', # бекенд авторизации через ВКонтакте
    'django.contrib.auth.backends.ModelBackend',# бекенд классической аутентификации, чтобы работала авторизация через обычный логин и пароль
    'social_core.backends.open_id.OpenIdAuth',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    # 'social_core.backends.vk.BaseOAuth2'

)

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "ru-ru"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
# STATICFILES_DIRS = [
#     BASE_DIR / 'static/'
#     ]

MEDIA_URL = '/media/'

MEDIA_ROOT = BASE_DIR / 'media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# AUTH_USER_MODEL = 'exchange_things.CustomUser'
AUTH_USER_MODEL = 'users.CustomUser'

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# LOGIN_URL = 'login'

# Настройка сессий
SESSION_COOKIE_SECURE = True # Установите True для HTTPS
CSRF_COOKIE_SECURE = True
SECURE_BROWSER_XSS_FILTER = True
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_REFERRER_POLICY = 'no-referrer-when-downgrade'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Использование базы данных для сессий
SESSION_COOKIE_AGE = 1209600  # Время жизни сессии в секундах (2 недели)
SESSION_COOKIE_HTTPONLY = True

#Настройки для отправки электронной почты
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yourmailserver.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'your-email@example.com'
EMAIL_HOST_PASSWORD = 'your-email-password'


INTERNAL_IPS = [
    '127.0.0.1',
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'django_warnings.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'WARNING',
            'propagate': True,
        },
    },
}
